@page "/"
@using KindQuestAPI.Models
@using SelfQuest.Models
@using SelfQuest.Services
@inject IUserService UserService

<PageTitle>Home</PageTitle>

<div class="relative min-h-screen bg-green-100 flex flex-col">

    <!-- Top Dropdown for Home Page (your original nav) -->
    <div class="w-full flex items-center justify-between px-2 py-2 bg-[var(--color-white)] border-b border-[var(--color-gray-700)]" style="font-family: var(--font-sans); z-index: 10;">
        <!-- Dropdown trigger -->
        <div class="dropdown">
            <label tabindex="0" class="btn btn-ghost btn-circle p-0 min-h-0 h-8 w-8">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-[var(--color-black)]" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
            </label>
            <ul
                tabindex="0"
                class="dropdown-content fixed top-0 left-0 right-0 w-full max-w-none z-50 p-4 shadow bg-[var(--color-white)] rounded-b-2xl border-b border-[var(--color-gray-700)] space-y-3"
                style="font-family: var(--font-sans);"
            >
                <!-- Header -->
                <li>
                    <div class="font-bold text-lg text-[var(--color-black)] mb-2">
                        4 Remaining Quests...
                    </div>
                </li>
                <!-- Quest 1 -->
                <li>
                    <div class="flex items-center justify-between gap-2 p-3 rounded-xl bg-[var(--color-gray-700)]/5 hover:bg-[var(--color-gray-700)]/10 transition">
                        <div class="flex items-center gap-3">
                            <span class="text-2xl">🐯</span>
                            <div>
                                <div class="font-medium text-[var(--color-black)]">Walk for 30 min.</div>
                                <div class="text-xs text-[var(--color-blue-500)] font-semibold">35 EXP</div>
                            </div>
                        </div>
                        <button
                            class="btn btn-xs bg-[var(--color-blue-500)] text-[var(--color-white)] rounded-full px-4 hover:bg-[var(--color-blue-500)]/80 transition"
                        >
                            Start
                        </button>
                    </div>
                </li>
                <!-- Quest 2 -->
                <li>
                    <div class="flex items-center justify-between gap-2 p-3 rounded-xl bg-[var(--color-gray-700)]/5 hover:bg-[var(--color-gray-700)]/10 transition">
                        <div class="flex items-center gap-3">
                            <span class="text-2xl">🐟</span>
                            <div>
                                <div class="font-medium text-[var(--color-black)]">Work out for 30 min.</div>
                                <div class="text-xs text-[var(--color-blue-500)] font-semibold">50 EXP</div>
                            </div>
                        </div>
                        <button
                            class="btn btn-xs bg-[var(--color-blue-500)] text-[var(--color-white)] rounded-full px-4 hover:bg-[var(--color-blue-500)]/80 transition"
                        >
                            Start
                        </button>
                    </div>
                </li>
                <!-- Quest 3 -->
                <li>
                    <div class="flex items-center justify-between gap-2 p-3 rounded-xl bg-[var(--color-gray-700)]/5 hover:bg-[var(--color-gray-700)]/10 transition">
                        <div class="flex items-center gap-3">
                            <span class="text-2xl">🐻</span>
                            <div>
                                <div class="font-medium text-[var(--color-black)]">Talk to a friend</div>
                                <div class="text-xs text-[var(--color-blue-500)] font-semibold">20 EXP</div>
                            </div>
                        </div>
                        <button
                            class="btn btn-xs bg-[var(--color-blue-500)] text-[var(--color-white)] rounded-full px-4 hover:bg-[var(--color-blue-500)]/80 transition"
                        >
                            Start
                        </button>
                    </div>
                </li>
                <!-- Quest 4 -->
                <li>
                    <div class="flex items-center justify-between gap-2 p-3 rounded-xl bg-[var(--color-gray-700)]/5 hover:bg-[var(--color-gray-700)]/10 transition">
                        <div class="flex items-center gap-3">
                            <span class="text-2xl">🐋</span>
                            <div>
                                <div class="font-medium text-[var(--color-black)]">Study for 30 min.</div>
                                <div class="text-xs text-[var(--color-blue-500)] font-semibold">50 EXP</div>
                            </div>
                        </div>
                        <button
                            class="btn btn-xs bg-[var(--color-blue-500)] text-[var(--color-white)] rounded-full px-4 hover:bg-[var(--color-blue-500)]/80 transition"
                        >
                            Start
                        </button>
                    </div>
                </li>
            </ul>
        </div>
        <span class="ml-2 text-base text-[var(--color-black)] font-medium" style="line-height: var(--text-xl--line-height);">
            4 Remaining Quests...
        </span>
    </div>

    <!-- Creatures in Corners (dynamic, clickable) -->
    <div class="flex-1 relative" style="min-height: 400px;">
        @if (isLoading)
        {
            <span class="absolute left-1/2 top-1/2 text-xl text-gray-500" style="transform: translate(-50%, -50%);">Loading your pets...</span>
        }
        else if (creatures.Any())
        {
            @for (int i = 0; i < creatures.Count && i < 4; i++)
            {
                var creature = creatures[i];
                var positionClass = i switch
                {
                    0 => "absolute top-8 left-4",
                    1 => "absolute top-8 right-4",
                    2 => "absolute bottom-24 left-4",
                    3 => "absolute bottom-24 right-4",
                    _ => "absolute top-1/2 left-1/2"
                };
                <a href="@($"/creature/{creature.Id}")" class="@($"{positionClass} text-5xl select-none transition-transform hover:scale-110")" style="user-select: none;" title="@creature.Nickname">
                    @if (!string.IsNullOrEmpty(creature.ImageUrl))
                    {
                        <img src="@creature.ImageUrl" alt="@creature.Nickname" class="w-16 h-16 rounded-full shadow" />
                    }
                    else
                    {
                        <span>
                            @(creature.Nickname?.ToLower().Contains("tiger") == true ? "🐯" :
                            creature.Nickname?.ToLower().Contains("whale") == true ? "🐋" :
                            creature.Nickname?.ToLower().Contains("fish") == true ? "🐟" :
                            creature.Nickname?.ToLower().Contains("bear") == true ? "🐻" : "🐾")
                        </span>
                    }
                </a>
            }
        }
        else
        {
            <span class="absolute left-1/2 top-1/2 text-xl text-gray-500" style="transform: translate(-50%, -50%);">No pets found. Go catch some creatures!</span>
        }
    </div>

    <!-- Dock at the bottom (keep your existing dock here) -->
    <div class="dock bg-gray-400 flex justify-around items-center h-16 w-full fixed bottom-0 left-0 z-20">
        <a href="/" class="w-20 text-black flex flex-col items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24" fill="none"
                 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                 class="lucide lucide-house">
                <path d="M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8"/>
                <path d="M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
            </svg>
            <span class="dock-label">Home</span>
        </a>
        <a href="/posts" class="w-20 text-black flex flex-col items-center justify-center">
            <svg class="svg-icon" viewBox="0 0 20 20" width="25" height="25">
                <circle cx="10" cy="10" r="8" stroke="currentColor" stroke-width="1" fill="none"/>
                <rect x="6" y="6" width="8" height="8" fill="currentColor" opacity="0.2"/>
            </svg>
            <span class="dock-label">Post</span>
        </a>
        <a href="/account" class="w-20 text-black flex flex-col items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24" fill="none"
                 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                 class="lucide lucide-user-round">
                <circle cx="12" cy="8" r="5"/>
                <path d="M20 21a8 8 0 0 0-16 0"/>
            </svg>
            <span class="dock-label">Profile</span>
        </a>
        <a href="/add" class="w-20 text-black flex flex-col items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 24 24" fill="none"
                 stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                 class="lucide lucide-plus-square">
                <rect x="3" y="3" width="18" height="18" rx="2" ry="2"/>
                <line x1="12" y1="8" x2="12" y2="16"/>
                <line x1="8" y1="12" x2="16" y2="12"/>
            </svg>
            <span class="dock-label">Add</span>
        </a>
    </div>
</div>

@code {
    private UserDto currentUser;
    private List<CreatureDto> creatures = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        // Replace with however you get the current user's ID
        var userId = "60d21b4667d0d8992e610c85";
        currentUser = await UserService.GetUserByIdAsync(userId);
        creatures = currentUser.Creatures
            .Select(uc => new CreatureDto
            {
                Id = uc.CreatureId,
                Nickname = uc.Nickname,
                Level = uc.Level,
                Xp = uc.Xp,
                Favorite = uc.Favorite
            })
            .ToList();
        isLoading = false;
    }
}
