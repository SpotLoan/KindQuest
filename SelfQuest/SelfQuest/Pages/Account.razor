@page "/account"
@using KindQuestAPI.Models
@using SelfQuest.Services
@inject IUserService UserService

<div class="container mx-auto p-4">
    @if (isLoading)
    {
        <p class="text-lg">Loading profile...</p>
    }
    else if (currentUser != null)
    {
        <div class="profile-container">
            <h2 class="text-2xl font-bold mb-4">Welcome, @currentUser.Username!</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div class="user-info bg-white p-4 rounded shadow">
                    <div class="flex items-center mb-4">
                        @if (!string.IsNullOrEmpty(currentUser.ProfileImageUrl))
                        {
                            <img src="@currentUser.ProfileImageUrl" alt="Profile" class="w-20 h-20 rounded-full mr-4" />
                        }
                        else
                        {
                            <div class="w-20 h-20 rounded-full bg-gray-300 flex items-center justify-center mr-4">
                                <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none"
                                     stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                                     class="lucide lucide-user">
                                    <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
                                    <circle cx="12" cy="7" r="4" />
                                </svg>
                            </div>
                        }
                        <div>
                            <h3 class="text-xl font-semibold">@currentUser.Username</h3>
                            <p class="text-gray-600">@currentUser.Email</p>
                        </div>
                    </div>
                    <div class="bio mb-4">
                        <h4 class="font-medium mb-1">Bio</h4>
                        <p>@(string.IsNullOrEmpty(currentUser.Bio) ? "No bio provided" : currentUser.Bio)</p>
                    </div>
                    <div class="stats grid grid-cols-3 gap-2 mb-4">
                        <div class="stat text-center p-2 bg-gray-100 rounded">
                            <span class="block font-bold">@currentUser.Stats?.TotalQuestsCompleted</span>
                            <span class="text-sm">Quests</span>
                        </div>
                        <div class="stat text-center p-2 bg-gray-100 rounded">
                            <span class="block font-bold">@currentUser.Stats?.TotalXpEarned</span>
                            <span class="text-sm">XP</span>
                        </div>
                        <div class="stat text-center p-2 bg-gray-100 rounded">
                            <span class="block font-bold">@currentUser.Creatures?.Count</span>
                            <span class="text-sm">Creatures</span>
                        </div>
                    </div>
                </div>
                <div class="creatures bg-white p-4 rounded shadow">
                    <h3 class="text-xl font-semibold mb-4">My Creatures</h3>
                    @if (currentUser.Creatures != null && currentUser.Creatures.Any())
                    {
                        <div class="grid grid-cols-2 gap-2">
                            @foreach (var creature in currentUser.Creatures)
                            {
                                <div class="creature p-2 border rounded">
                                    <h4 class="font-medium">@(string.IsNullOrEmpty(creature.Nickname) ? "Unnamed Creature" : creature.Nickname)</h4>
                                    <p class="text-sm">Level: @creature.Level</p>
                                    <p class="text-sm">XP: @creature.Xp</p>
                                    @if (creature.Favorite)
                                    {
                                        <span class="text-yellow-500">â˜… Favorite</span>
                                    }
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p>You don't have any creatures yet.</p>
                    }
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="bg-white p-4 rounded shadow">
            <h2 class="text-2xl font-bold mb-4">Profile Not Found</h2>
            <p>Sorry, we couldn't load the profile for this account.</p>
        </div>
    }
</div>

@code {
    private UserDto currentUser;
    private bool isLoading = true;
    private readonly string demoUserId = "60d21b4667d0d8992e610c85";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            currentUser = await UserService.GetUserByIdAsync(demoUserId);
        }
        catch
        {
            currentUser = null;
        }
        isLoading = false;
    }
}
